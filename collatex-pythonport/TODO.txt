General:
	Optimize project format
		DONE: make it a multi-file module
		DONE: register project on pypi
		DONE: pip based installation works on Mac
	Port code to Python 3 to support Unicode characters: DONE
	
Documentation:
    Reference guide (cookbook)
    Plus tutorials for the workshop(s)

Preparation:
	DONE: Tokenization: There are two tokenizers:
		One based on whitespace, punctuation not treated as separate tokens
		Another based on whitespace or punctuation, punctuation is treated as separate tokens (default)
	DONE: Tokenizer retains whitespace (in t-property of the preceding token)
	Normalization:  DONE: whitespace normalization
	                TODO: upper/lowercase

Matching:
    Near matching as a post process (in experimental branch of David's fork)

Alignment:
	Build global string array: DONE
	Build suffix array: DONE
	Build LCP array: DONE
	Find LCP intervals: DONE
	Find non overlapping repeating blocks: DONE
	Build block witnesses: DONE
	Merge vertices into graph: DONE
	Handle 3, 4, N witnesses: DONE
	Deal with alignment choices using decision tree: DONE (implemented in EditGraphAligner)
	Combine dekker_suffix_alignment + edit graph aligner approaches into one: DONE

	Transposition detection:
	TODO: there is no transposition detection
	Find match phrases: NOT YET NEEDED, optional
	Find transpositions: NOT YET NEEDED, optional
	Merge transpositions into graph: TODO
	
	Optimization:
	a* search algorithm as optimization: NOT YET NEEDED
	
Presentation:
	Join variant graph (parallel segments): DONE
	Rank the graph: DONE
	Build alignment table: DONE
	HTML output: DONE
	SVG output: DONE
	JSON output: DONE
	XML output: DONE (generic output format; based on the JSON output)
	TEI output: DONE
		
Special cases:
	TODO: failing use case in test_collatex_block_witnesses.py
		name: test_blocks_failing_transposition_use_case_old_algorithm
	TODO: Blocks should not start with punctuation
	TODO: Scoring should take length of blocks into account
	
				